pipeline {
    agent any
    stages {
        stage('init dependencies') {
            steps {
                sh 'git submodule update --init --remote'
            }
        }
        stage('build dependencies') {
            steps {
                sh 'cd ext/prngsharp; ./build.Linux.jenkins.nix'
                sh 'cd ext/gpgme; nix-shell -p autoconf automake libtool m4 --run "./autogen.sh"'
                sh 'cd ext/gpgme; nix-shell -p gcc libgpgerror libassuan --run "./configure --enable-languages=cpp"'
                sh 'cd ext/gpgme; nix-shell -p gcc libgpgerror libassuan --run "make"'
                sh 'cd ext/elykseer-crypto; git submodule update --init --remote'
                sh 'cd ext/elykseer-crypto/ext/prngsharp; ./build.Linux.jenkins.nix'
                sh 'cd ext/elykseer-crypto/ext/cryptopp; nix-shell -p gcc --run "make -f GNUmakefile"'
                sh 'cd ext/elykseer-crypto/BUILD; rm -rf CMakeFiles CMakeCache.txt'
                sh 'cd ext/elykseer-crypto/BUILD; nix-shell -p gcc pandoc html2text --run "./mk_cpp.sh"'
                sh 'cd ext/elykseer-crypto/BUILD; nix-shell -p gcc cmake boost zlib --run "cmake ."'
                sh 'cd ext/elykseer-crypto/BUILD; nix-shell -p gcc cmake boost zlib --run "make"'
                sh 'cd ext/elykseer-crypto/BUILD; nix-shell -p gcc cmake boost zlib busybox --run "./ut.sh"'
                sh 'cd ext/rapidcheck; mkdir -p BUILD'
                sh 'cd ext/rapidcheck/BUILD; nix-shell -p gcc cmake boost zlib --run "cmake .."'
                sh 'cd ext/rapidcheck/BUILD; nix-shell -p gcc cmake boost zlib --run "make"'
            }
        }
        stage('mk cpp') {
            steps {
                sh 'cd BUILD; nix-shell -p gcc cmake boost zlib --run "./mk_cpp.sh"'
            }
        }
        stage('cmake') {
            steps {
                sh 'cd BUILD; nix-shell -p gcc cmake boost zlib --run "cmake ."'
            }
        }
        stage('compile') {
            steps {
                sh 'cd BUILD; nix-shell -p gcc cmake boost zlib --run "make"'
            }
        }
        stage('unit tests') {
            steps {
                sh 'cd BUILD; nix-shell -p gcc cmake boost zlib --run "./ut.sh"'
            }
        }
    }
}
